apiVersion: app/v1
kind: Deployment
metadata:
   name: mysql-deployment
   labels:
     app: mysql
spec:
   replicas: 1
   selector:
     matchlabels:
        app: mysql
   template:
     metadata:
       labels:
         app: mysql
     spec:
       containers:
         - name: mysql
           image: mysql:5.7
           ports:
             - containerPort: 3306
           env:
             - name: MYSQL_ROOT_PASSWORD
               value: "1234"  # Password dell'utente root
             - name: MYSQL_DATABASE
               value: "sistema_finanza"  # Nome del database
             - name: MYSQL_USER
               value: "Admin"  # Nome utente
             - name: MYSQL_PASSWORD
               value: "1234"  # Password utente
          ports:
            - containerPort: 3306
          volumeMounts:
             - name: mysql-initdb
               mountPath: /docker-entrypoint-initdb.d
             - mountPath: "/var/lib/mysql"
               subPath: "mysql"
               name: mysql-data
       volumes:
         - name: mysql-initdb
           configMap:
             name: mysql-initdb-config
         - name: mysql-data
           persistentVolumeClaim:
             claimName: mysql-data-disk
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS usermanagement;

    CREATE USER IF NOT EXISTS 'Admin'@'%' IDENTIFIED BY '1234';

    USE usermanagement;


    CREATE TABLE IF NOT EXISTS utenti(
        email VARCHAR(255) PRIMARY KEY,
        high_value DOUBLE DEFAULT NULL,
        low_value DOUBLE DEFAULT NULL,
        telegramid DOUBLE   DEFAULT NULL,
        ticker VARCHAR(10) NOT NULL);

    CREATE TABLE IF NOT EXISTS stock_data (
        id INT AUTO_INCREMENT PRIMARY KEY,
        email VARCHAR(255),
        ticker VARCHAR(10),
        value DOUBLE NOT NULL,
        timestamp DATETIME NOT NULL,
        FOREIGN KEY (email) REFERENCES utenti(email));
    FLUSH PRIVILEGES;

    GRANT ALL PRIVILEGES ON usermanagement.* TO 'Admin'@'%' WITH GRANT OPTION;
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-disk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306         # Porta del servizio
      targetPort: 3306   # Porta del container MySQL
  type: ClusterIP
